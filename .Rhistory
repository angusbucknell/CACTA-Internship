load("~/angus_R.RData")
View(CACTT_genome)
View(CACTT_genome)
CACTT_long <- packSearch(DNAString("CACTT"), genome,
elementLength = c(3000, 5500), tsdLength = 3)
library(Biostrings)
library(packFinder)
library(ggplot2)
library(rtracklayer)
CACTT_long <- packSearch(DNAString("CACTT"), genome,
elementLength = c(3000, 5500), tsdLength = 3)
CACTT_long
vmatch <- vmatchPattern("CACTT", genome)
vmatch <- unlist(vmatch[startsWith(names(vmatch), "Qrob_Chr")])
vmatch_TE <- vmatchPattern("CACTT", genome[TE])
TE <- readGFFAsGRanges("C:/Users/pbuck/OneDrive/Documents/Qrob_PM1N_refTEs.gff")
vmatch_TE <- vmatchPattern("CACTT", genome[TE])
vmatch_TE <- vmatch_TE[startsWith(names(vmatch_TE), "Qrob_Chr")]
vmatch_TE <- vmatch_TE[elementNROWS(vmatch_TE) > 0]
vmatch_TE <- unique(as.data.frame(unlist(vmatch_TE)))
vmatch_TE <- IRanges(start = vmatch_TE$start, end = vmatch_TE$end,
width = vmatch_TE$width, names = vmatch_TE$names)
save.image("~/CACTA_project/.RData")
View(CACTT_long)
View(CACTT_long)
CACTT_long <- makeGRangesFromDataFrame(CACTT_long)
CACTT_long
seqnames(CACTT_long)
startsWith(seqnames(CACTT_long), "Qrob_Chr")
startsWith(as.character(seqnames(CACTT_long)), "Qrob_Chr")
CACTT_long[startsWith(as.character(seqnames(CACTT_long)), "Qrob_Chr")]
CACTT_long <- CACTT_long[startsWith(as.character(seqnames(CACTT_long)), "Qrob_Chr")]
genome[CACTT_long]
long_seq <- genome[CACTT_long]
gc()
View(ATCCT_tsd4)
?FastaFile()
export(long_seq, format = "fasta")
export(long_seq, con = "CACTT_long", format = "fasta")
barplot(dims_5nt$freq)
View(dims_5nt)
View(dims_5nt)
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity")
View(dims_5nt_gfx)
View(dims_5nt_gfx)
View(dims_5nt_gfx)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches")
dims_5nt_gfx
View(dims)
View(dims)
sd(dims$freq)
dims$freq
View(dims_5nt)
View(dims_5nt)
sd(dims_5nt)
dims_5nt
sd(dims_5nt$freq)
sd_5nt <- sd(dims_5nt$freq)
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sd_5nt, ymax = freq + sd_5nt), width=.2,
position = position_dodge(.9))
dims_5nt_gfx
dim(dims_5nt)
dim(dims_5nt)[1]
sem_5nt <- sd(dims_5nt$freq)/sqrt(dim(dims_5nt)[1])
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.9))
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.1))
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("a") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
dims_5nt_gfx
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") + theme_classic() +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.9))
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.9)) + ylim(0, 6000)
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.9)) + ylim(0, 5000)
dims_5nt_gfx
dims_5nt_gfx
dims_5nt_gfx <- ggplot(dims_5nt, aes(seq, freq)) + geom_bar(stat = "identity") +
xlab("Search sequence") + ylab("Frequency of matches") +
geom_errorbar(aes(ymin = freq - sem_5nt, ymax = freq + sem_5nt), width=.2,
position = position_dodge(.9)) + ylim(0, 6000)
dims_5nt_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) + geom_line()
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line() + xlab("Terminal Site Duplication (TSD) length") +
ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq, linetype=seq)) +
geom_line() + xlab("Terminal Site Duplication (TSD) length") +
ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq, shape=seq)) +
geom_line() + xlab("Terminal Site Duplication (TSD) length") +
ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq, shape=seq)) +
geom_line(2) + geom_point(5) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(2) + geom_point(5) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(size=2) + geom_point(size=5) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(size=1.5) + geom_point(size=2) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(size=1) + geom_point(size=2) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(size=1.2) + geom_point(size=2) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
tsd_gfx
##### TSD plot #####
tsd_gfx <- ggplot(tsd_dims, aes(x=tsd, y=freq, group=seq, color=seq)) +
geom_line(size=1) + geom_point(size=2) +
xlab("Terminal Site Duplication (TSD) length") + ylab("Frequency of matches")
tsd_gfx
barplot((table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames)))/(width(genome[1:12])/1000000))
table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames)))/(width(genome[1:12])/1000000)
table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames)))/(width(genome[1:12])/1000000
table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames)))/(width(genome[1:12])/1000000))
table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames))/(width(genome[1:12])/1000000))
table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames))/(width(genome[1:12])/1000000)
genome_freq <- as.data.frame(table(as.factor(CACTT_genome[startsWith(CACTT_genome$seqnames, "Qrob_Chr"),]$seqnames))/(width(genome[1:12])/1000000))
View(genome_freq)
View(genome_freq)
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar()
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(x=Var1, y=Freq)) + geom_bar()
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity")
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp")
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 90)
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 100)
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 100) +
scale_x_discrete(labels= 1:12)
chr_gfx
sem_chr <- sd(genome_freq$Freq)/sqrt(dim(genome_freq)[1])
sd(genome_freq$Freq)
genome_freq$Freq
sd(genome_freq$Freq)
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 100) +
scale_x_discrete(labels= 1:12) +
geom_errorbar(aes(ymin = Freq - sem_chr, ymax = Freq + sem_chr), width=.2,
position = position_dodge(.9)) + ylim(0, 6000)
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 100) +
geom_errorbar(aes(ymin = Freq - sem_chr, ymax = Freq + sem_chr), width=.2,
position = position_dodge(.9)) +  scale_x_discrete(labels= 1:12)
chr_gfx
rm(sem_chr)
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp") + ylim(0, 100) + scale_x_discrete(labels= 1:12)
chr_gfx
chr_gfx <- ggplot(genome_freq, aes(Var1, Freq)) + geom_bar(stat="identity") +
xlab("Chromosome") + ylab("Matches per 1 Mbp of chromosome length") +
ylim(0, 100) + scale_x_discrete(labels= 1:12)
chr_gfx
long_seq
export(long_seq[1], format = "fasta", con = "example.fa")
